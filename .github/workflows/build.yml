name: Build and deploy
on:
  push:
    branches:
        - development
        - main
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Get Code
              uses: actions/checkout@v3
            
            - name: Setup node
              uses: actions/setup-node@v3
              with:
                node-version: 18
            
            - name: Cache Dependencies
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: ${{runner.os}}-build-${{ hashFiles('**/package-lock.json')}}
            
            - name: Install Dependencies
              run: npm ci
            
            - name: Test the app health
              run: npm test && echo 'app good to be deployed'   
            
            - name: Save artifacts
              uses: actions/upload-artifact@v3
              with:
                name: my-node-app
                path: |
                  src
                  package.json
                  package-lock.json
    
    deploy:
        needs: build 
        runs-on: ubuntu-latest
        steps:
           - name: Download artifacts
             uses: actions/download-artifact@v3
             with: 
              name : my-node-app
          
           - name: Get artifacts
             run: pwd && ls
    
           - name: Install SSH key
             uses: shimataro/ssh-key-action@v2
             with: 
              key: ${{ secrets.SSH_PRIVATE_KEY }}
              known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
          
           - name: Adding Known Hosts
             run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          
           - name: Deploy with rsync
             run: rsync -avz src package.json package-lock.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/ubuntu/www/
             
           - name: Install Dependencies 
             run: ssh -t -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd /home/${{ secrets.SSH_USER }}/www/ && npm install"

           - name: Reboot the app
             run: echo 'Rebooting the app'
             #run: ssh ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} pm2 restart ${{ secrets.PM2_PID}}